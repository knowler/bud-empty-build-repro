const DEFAULT_OPTIONS = {
  cacheGroups: {
    chunks: 'all',
    vendors: {
      chunks: 'all',
      enforce: true,
      test: /[\\/]node_modules[\\/]/,
      reuseExistingChunk: true,
      priority: -10,
      name: function (module, _chunks, cacheGroupKey) {
        const moduleFileNameParts = module
          .identifier()
          .split('/')
          .reduceRight(item => item)
          .split('.')
        const file = moduleFileNameParts
          .slice(0, moduleFileNameParts.length - 1)
          .join('.')
        return `${cacheGroupKey}/${file}`
      },
    },
  },
}
/**
 * @function splitChunks
 * @hook build/optimization/splitChunks
 */
export const splitChunks = function (options) {
  options = options ? options : DEFAULT_OPTIONS
  this.hooks.on('build/optimization/splitChunks', () => options)
  return this
}
//# sourceMappingURL=splitChunks.js.map
