import {isUndefined, isBoolean} from 'lodash'
const proxy = function (config) {
  /**
   * Case: no config passed
   * Response: enable proxy and bounce
   */
  if (isUndefined(config)) {
    this.server.config.set('middleware.proxy', true)
    return this
  }
  /**
   * Case: config.enabled is explicitly set
   * Response: enable proxy, delete property from config
   */
  if (isUndefined(config.enabled)) {
    this.server.config.set('middleware.proxy', true)
  } else {
    this.when(!isBoolean(config.enabled), () => {
      this.dashboard.error(
        'Attempt to set proxy enabled to a non boolean value.',
      )
      process.exit()
    })
    this.server.config.set('middleware.proxy', config.enabled)
  }
  this.server.config.merge(
    'proxy',
    Object.assign(Object.assign({}, config), {
      enabled: undefined,
    }),
  )
  return this
}
export {proxy}
//# sourceMappingURL=proxy.js.map
