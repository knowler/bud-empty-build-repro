'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.Extensions = void 0
const tslib_1 = require('tslib')
const bud_framework_1 = require('@roots/bud-framework')
const autobind_decorator_1 = require('autobind-decorator')
const lodash_1 = require('lodash')
const index_1 = require('../Extension/index')
class Extensions extends bud_framework_1.Service {
  constructor() {
    super(...arguments)
    this.name = '@roots/bud-extensions'
  }
  register() {
    this.every((_name, extension) => {
      return this.registerExtension(extension)
    })
  }
  boot() {
    this.every((_name, extension) => {
      return this.bootExtension(extension)
    })
  }
  registerExtension(extension) {
    this.log(`Registering extension: %s`, extension.name)
    this.set(
      extension.name,
      new index_1.Extension(this.app, extension).register(),
    )
    this.log(`Extension registered: %s`, extension.name)
  }
  bootExtension(extension) {
    this.log(`Booting extension: %s`, extension.name)
    this.set(
      extension.name,
      this.get(extension.name).boot(this.app),
    )
  }
  add(extension) {
    this.log(`Adding extension: %s`, extension.name)
    this.registerExtension(extension)
    this.bootExtension(extension)
  }
  make() {
    this.log(`Building extensions: %s`, this.getKeys())
    const plugins = this.getKeys()
      .map(name => this.get(name).make)
      .filter(ext => !lodash_1.isUndefined(ext))
    return plugins
  }
  discard(pkg) {
    this.remove(pkg)
    return this.app
  }
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Extensions.prototype,
  'register',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Extensions.prototype,
  'boot',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Extensions.prototype,
  'registerExtension',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Extensions.prototype,
  'bootExtension',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Extensions.prototype,
  'add',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Extensions.prototype,
  'make',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Extensions.prototype,
  'discard',
  null,
)
exports.Extensions = Extensions
//# sourceMappingURL=index.js.map
