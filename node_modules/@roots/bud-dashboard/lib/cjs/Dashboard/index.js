'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.Dashboard = void 0
const tslib_1 = require('tslib')
const bud_framework_1 = require('@roots/bud-framework')
const react_1 = tslib_1.__importDefault(require('react'))
const ink_1 = require('ink')
const lodash_1 = require('lodash')
const autobind_decorator_1 = require('autobind-decorator')
const Dashboard_1 = require('./Dashboard')
const index_1 = require('../Error/index')
const index_2 = require('../Write/index')
const Screen_1 = require('../components/Screen')
const index_3 = require('../Mark/index')
class Dashboard extends bud_framework_1.Service {
  constructor() {
    super(...arguments)
    this.name = 'dashboard'
  }
  register() {
    Object.assign(this.app, {
      write: index_2.Write,
      error: index_1.Error,
    })
  }
  run() {
    this.info('Initializing dashboard')
    if (this.app.store.isTrue('ci')) {
      return
    }
    this.render(
      react_1.default.createElement(Dashboard_1.Dashboard, {
        bud: this.app,
      }),
    )
  }
  renderError(body, title) {
    return (this.dashboard = ink_1.render(
      react_1.default.createElement(
        Screen_1.Screen,
        null,
        react_1.default.createElement(index_3.Mark, {
          text: this.app.name,
        }),
        react_1.default.createElement(index_1.Error, {
          body: body,
          title: title,
        }),
      ),
    ))
  }
  render(Component) {
    if (this.app.store.isTrue('ci')) return
    const Output = () =>
      lodash_1.isString(Component)
        ? react_1.default.createElement(
            ink_1.Text,
            null,
            Component,
          )
        : Array.isArray(Component)
        ? Component.map((c, id) =>
            react_1.default.createElement(
              ink_1.Text,
              {key: id},
              c,
            ),
          )
        : Component
    return (this.dashboard = ink_1.render(
      react_1.default.createElement(
        Screen_1.Screen,
        null,
        react_1.default.createElement(index_3.Mark, {
          text: this.app.name,
        }),
        react_1.default.createElement(Output, null),
      ),
    ))
  }
  kill() {
    this.dashboard.unmount()
  }
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Dashboard.prototype,
  'register',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Dashboard.prototype,
  'run',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Dashboard.prototype,
  'renderError',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Dashboard.prototype,
  'render',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Dashboard.prototype,
  'kill',
  null,
)
exports.Dashboard = Dashboard
//# sourceMappingURL=index.js.map
