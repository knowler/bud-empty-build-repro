'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.Dashboard = void 0
const tslib_1 = require('tslib')
const react_1 = tslib_1.__importDefault(require('react'))
const ink_1 = require('ink')
const ink_use_style_1 = require('@roots/ink-use-style')
const lodash_1 = require('lodash')
const components_1 = require('../components')
const hooks_1 = require('../hooks')
const Dashboard = ({bud}) => {
  var _a, _b, _c
  const compilation = hooks_1.useCompilation(bud)
  const theme = ink_use_style_1.useStyle(bud.store.get('theme'))
  const pkg = hooks_1.usePackageJson(bud)
  ink_1.useInput(input => {
    if (lodash_1.isEqual(input, 'q')) {
      try {
        process.exit()
      } catch (err) {}
    }
  })
  const appProps = Object.assign({bud, theme, pkg}, compilation)
  return react_1.default.createElement(
    ink_1.Box,
    {flexDirection: 'column'},
    ((_a = appProps.errors) === null || _a === void 0
      ? void 0
      : _a.length) > 0 &&
      react_1.default.createElement(
        ink_1.Static,
        {marginBottom: 1, items: appProps.errors},
        (err, id) =>
          react_1.default.createElement(
            components_1.Module,
            {
              key: `${id}-webpack-error`,
              color: appProps.theme.colors.error,
              labelColor: theme.colors.foreground,
              label: `Error: ${err.moduleName}`,
            },
            react_1.default.createElement(
              ink_1.Box,
              {width: theme.bounds.width - 4},
              react_1.default.createElement(
                ink_1.Text,
                null,
                err.message,
              ),
            ),
          ),
      ),
    appProps.hasWarnings &&
      ((_b = appProps.warnings) === null || _b === void 0
        ? void 0
        : _b.length) > 0 &&
      react_1.default.createElement(
        ink_1.Static,
        {marginBottom: 1, items: appProps.warnings},
        warning =>
          react_1.default.createElement(
            components_1.Module,
            {
              key: warning.moduleIdentifier,
              color: appProps.theme.colors.warning,
              labelColor: theme.colors.foreground,
              label: `Error: ${warning.moduleName}`,
            },
            react_1.default.createElement(
              ink_1.Box,
              {width: theme.bounds.width - 4},
              react_1.default.createElement(
                ink_1.Text,
                null,
                warning.message,
              ),
            ),
          ),
      ),
    ((_c = appProps.stats) === null || _c === void 0
      ? void 0
      : _c.assets) &&
      react_1.default.createElement(
        react_1.default.Fragment,
        null,
        react_1.default.createElement(
          components_1.Assets,
          Object.assign({}, appProps),
        ),
        react_1.default.createElement(
          components_1.Time,
          Object.assign({}, appProps),
        ),
      ),
    react_1.default.createElement(
      components_1.Progress,
      Object.assign({}, appProps),
    ),
    react_1.default.createElement(components_1.Git, {
      theme: appProps.theme,
    }),
  )
}
exports.Dashboard = Dashboard
//# sourceMappingURL=Dashboard.js.map
