import React from 'react'
import {Box, Text} from 'ink'
import Spinner from 'ink-spinner'
import {Bar} from './Bar/index'
export const Progress = ({progress, hasErrors, theme}) => {
  var _a
  const guard =
    (progress === null || progress === void 0
      ? void 0
      : progress.decimal) &&
    theme.bounds.width &&
    typeof theme.bounds.width == 'number'
  if (!guard) return null
  return React.createElement(
    Box,
    {flexDirection: 'row'},
    React.createElement(
      Box,
      {width: 13},
      React.createElement(
        Text,
        {wrap: 'truncate'},
        (progress === null || progress === void 0
          ? void 0
          : progress.decimal) < 1
          ? React.createElement(
              React.Fragment,
              null,
              React.createElement(
                Text,
                {color: theme.colors.primary},
                React.createElement(Spinner, null),
                ' ',
                (_a = progress.message) !== null && _a !== void 0
                  ? _a
                  : '',
              ),
            )
          : React.createElement(
              React.Fragment,
              null,
              hasErrors
                ? React.createElement(
                    Text,
                    {color: theme.colors.error},
                    'X Error',
                  )
                : React.createElement(
                    Text,
                    {color: theme.colors.success},
                    '\u2714 Complete',
                  ),
            ),
      ),
    ),
    React.createElement(
      Box,
      null,
      React.createElement(Bar, {
        character: '=',
        maxWidth: theme.bounds.width - 22,
        colors: !hasErrors
          ? [theme.colors.primary, theme.colors.primaryAlt]
          : [theme.colors.error, theme.colors.error],
        percent:
          progress === null || progress === void 0
            ? void 0
            : progress.decimal,
      }),
      React.createElement(Text, null, ' ', progress.percentage),
    ),
  )
}
//# sourceMappingURL=index.js.map
