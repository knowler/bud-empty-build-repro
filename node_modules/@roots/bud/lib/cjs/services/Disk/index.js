'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.Disk = void 0
const tslib_1 = require('tslib')
const bud_framework_1 = require('@roots/bud-framework')
const filesystem_1 = require('@roots/filesystem')
const autobind_decorator_1 = require('autobind-decorator')
class Disk extends bud_framework_1.Disk {
  register() {
    this.setStore({
      ['@roots']: {
        baseDir: this.app.path('modules', '@roots'),
        glob: this.pattern,
      },
      project: {
        baseDir: this.app.path('project'),
        glob: this.pattern,
      },
    })
    this.every((name, disk) => {
      this.set(name, this.make(name, disk))
    })
  }
  boot() {
    this.get('project').has('package.json')
      ? this.app.store.set(
          'project',
          this.get('project').readJson('package.json'),
        )
      : this.logger
          .scope("@roots/bud-disk couldn't find a package.json")
          .log(this.get('project'))
  }
  make(
    key,
    options = {
      baseDir: this.baseDir,
      glob: this.pattern,
    },
  ) {
    this.set(key, this.makeFileContainer(options))
    return this.get(key)
  }
  makeFileContainer(options) {
    var _a, _b
    const dir =
      (_a =
        options === null || options === void 0
          ? void 0
          : options.baseDir) !== null && _a !== void 0
        ? _a
        : this.baseDir
    const glob =
      (_b =
        options === null || options === void 0
          ? void 0
          : options.glob) !== null && _b !== void 0
        ? _b
        : this.pattern
    this.logger
      .scope('@roots/bud-disk')
      .log(`Making disk: ${dir}`)
    const container = new filesystem_1.FileContainer(dir)
    container.setDisk(glob)
    return container
  }
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Disk.prototype,
  'register',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Disk.prototype,
  'boot',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Disk.prototype,
  'make',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Disk.prototype,
  'makeFileContainer',
  null,
)
exports.Disk = Disk
//# sourceMappingURL=index.js.map
