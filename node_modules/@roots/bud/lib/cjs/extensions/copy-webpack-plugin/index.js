'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.api = exports.when = exports.make = exports.options = exports.name = void 0
const tslib_1 = require('tslib')
const copy_webpack_plugin_1 = tslib_1.__importDefault(
  require('copy-webpack-plugin'),
)
const globby_1 = require('globby')
const extension = {
  name: 'copy-webpack-plugin',
  options: () => ({
    patterns: [],
    noErrorOnMissing: true,
  }),
  make: options =>
    new copy_webpack_plugin_1.default(options.all()),
  when(_app, options) {
    var _a
    return (
      options.has('patterns') &&
      ((_a = options.get('patterns')) === null || _a === void 0
        ? void 0
        : _a.length) > 0
    )
  },
  api: () => ({
    assets: function (jobs) {
      jobs.map(from => {
        globby_1.sync(from).map(from => {
          const dirName = from.split('/')[
            from.split('/').length - 2
          ]
          const format = this.store.isTrue('hash')
            ? this.store.get('hashFormat')
            : this.store.get('fileFormat')
          const pattern = {
            from,
            to: `${dirName}/${format}.[ext]`,
          }
          this.extensions
            .get('copy-webpack-plugin')
            .set('options', copy => {
              var _a
              return Object.assign(Object.assign({}, copy), {
                patterns: [
                  ...((_a = copy.patterns) !== null &&
                  _a !== void 0
                    ? _a
                    : []),
                  pattern,
                ],
              })
            })
        })
      })
      return this
    },
  }),
}
;(exports.name = extension.name),
  (exports.options = extension.options),
  (exports.make = extension.make),
  (exports.when = extension.when),
  (exports.api = extension.api)
//# sourceMappingURL=index.js.map
