import CopyPlugin from 'copy-webpack-plugin'
import {sync} from 'globby'
const extension = {
  name: 'copy-webpack-plugin',
  options: () => ({
    patterns: [],
    noErrorOnMissing: true,
  }),
  make: options => new CopyPlugin(options.all()),
  when(_app, options) {
    var _a
    return (
      options.has('patterns') &&
      ((_a = options.get('patterns')) === null || _a === void 0
        ? void 0
        : _a.length) > 0
    )
  },
  api: () => ({
    assets: function (jobs) {
      jobs.map(from => {
        sync(from).map(from => {
          const dirName = from.split('/')[
            from.split('/').length - 2
          ]
          const format = this.store.isTrue('hash')
            ? this.store.get('hashFormat')
            : this.store.get('fileFormat')
          const pattern = {
            from,
            to: `${dirName}/${format}.[ext]`,
          }
          this.extensions
            .get('copy-webpack-plugin')
            .set('options', copy => {
              var _a
              return Object.assign(Object.assign({}, copy), {
                patterns: [
                  ...((_a = copy.patterns) !== null &&
                  _a !== void 0
                    ? _a
                    : []),
                  pattern,
                ],
              })
            })
        })
      })
      return this
    },
  }),
}
export const {name, options, make, when, api} = extension
//# sourceMappingURL=index.js.map
