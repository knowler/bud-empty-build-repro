import {DefinePlugin} from 'webpack'
const extension = {
  name: 'webpack-define-plugin',
  make: options => new DefinePlugin(options.all()),
  when: (_bud, opts) => {
    var _a
    return (
      ((_a = opts.getEntries()) === null || _a === void 0
        ? void 0
        : _a.length) > 0
    )
  },
  options: ({env, store}) => {
    /**
     * .env values which contain PUBLIC
     */
    const fromEnv = env
      .getEntries()
      .filter(([k]) => k.includes('APP_PUBLIC'))
      .reduce(
        (a, [k, v]) =>
          Object.assign(Object.assign({}, a), {
            [k]: JSON.stringify(v),
          }),
        {},
      )
    const fromStore = store.get('extension.webpackDefinePlugin')
    return Object.assign(Object.assign({}, fromEnv), fromStore)
  },
}
export default extension
export const {name, make, when, options} = extension
//# sourceMappingURL=index.js.map
