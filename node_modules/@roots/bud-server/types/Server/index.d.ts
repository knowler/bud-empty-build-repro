/// <reference types="node" />
/// <reference types="express" />
import { Service, Server as Contract } from '@roots/bud-framework';
import Webpack from 'webpack';
import { FSWatcher } from 'fs-extra';
export declare class Server extends Service implements Contract {
    name: string;
    middleware: Contract.Middleware.Inventory;
    config: Contract.Config;
    _instance: Contract.Instance;
    _watcher: FSWatcher;
    get instance(): import("express").Application;
    set instance(instance: import("express").Application);
    get watcher(): FSWatcher;
    set watcher(watcher: FSWatcher);
    readonly _assets: string[];
    get assets(): string[];
    get isWatchable(): boolean;
    getWatchedFilesArray(): string[];
    booted(): void;
    processMiddlewares(compiler: Contract.Compiler): void;
    run(compiler: Webpack.Compiler): this;
    inject(): void;
}
//# sourceMappingURL=index.d.ts.map