'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.Cache = void 0
const tslib_1 = require('tslib')
const bud_framework_1 = require('@roots/bud-framework')
const crypto_1 = tslib_1.__importDefault(require('crypto'))
const fs_extra_1 = require('fs-extra')
const autobind_decorator_1 = require('autobind-decorator')
const globby_1 = require('globby')
class Cache extends bud_framework_1.Service {
  constructor() {
    super(...arguments)
    this.name = '@roots/bud-cache'
    this.cacheFiles = []
  }
  register() {
    this.app.hooks
      .on('build/cache/name', () => undefined)
      .hooks.on('build/cache/version', () => undefined)
      .hooks.on('build/cache/type', () => 'memory')
      .hooks.on('build/cache/cacheDirectory', () => undefined)
      .hooks.on('build/cache/cacheLocation', () => undefined)
      .hooks.on('build/cache/buildDependencies', undefined)
      .hooks.on('build/cache/managedPaths', () => undefined)
  }
  booted() {
    this.app.hooks.filter('build/cache/type') === 'filesystem' &&
      !fs_extra_1.pathExistsSync(this.app.path('storage')) &&
      fs_extra_1.mkdirSync(this.app.path('storage'))
  }
  version() {
    return crypto_1.default
      .createHash('md4')
      .update(this.hash())
      .digest('hex')
  }
  directory() {
    return this.app.path('storage', 'cache')
  }
  buildDependencies() {
    return globby_1.sync([
      this.app.path(
        'project',
        `${this.app.name}.{js,ts,yml,json}`,
      ),
      this.app.path(
        'project',
        `${this.app.name}.${this.app.mode}.{js,ts.yml,json}`,
      ),
      this.app.path('project', 'package.json'),
      ...this.app.discovery.resolveFrom.map(
        dep => `${dep}/lib/cjs/index.js`,
      ),
      ...this.app.discovery.resolveFrom.map(
        dep => `${dep}/package.json`,
      ),
      ...this.cacheFiles,
      this.app.path('storage', 'cache/*'),
    ])
  }
  hash() {
    var _a
    return JSON.stringify(
      (_a = this.buildDependencies().reduce(
        (all, file) =>
          all.concat(fs_extra_1.readFileSync(file, 'utf8')),
        process.argv.slice(3).join(''),
      )) !== null && _a !== void 0
        ? _a
        : '{}',
    )
  }
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Cache.prototype,
  'register',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Cache.prototype,
  'booted',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Cache.prototype,
  'version',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Cache.prototype,
  'directory',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Cache.prototype,
  'buildDependencies',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Cache.prototype,
  'hash',
  null,
)
exports.Cache = Cache
//# sourceMappingURL=index.js.map
