'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.Rule = void 0
const tslib_1 = require('tslib')
const autobind_decorator_1 = require('autobind-decorator')
const lodash_1 = require('lodash')
class Rule {
  constructor({test, use = null, exclude = null, type = null}) {
    this.test = lodash_1.isFunction(test) ? test : () => test
    if (use) {
      this.use = lodash_1.isFunction(use) ? use : () => use
    }
    if (exclude) {
      this.exclude = lodash_1.isFunction(exclude)
        ? exclude
        : () => exclude
    }
    if (type) {
      this.type = lodash_1.isFunction(type) ? type : () => type
    }
  }
  getTest(app) {
    return this.test ? this.test(app) : null
  }
  setTest(test) {
    this.test = lodash_1.isFunction(test) ? test : () => test
  }
  getUse(app) {
    return this.use ? this.use(app) : null
  }
  setUse(use) {
    this.use = lodash_1.isFunction(use) ? use : () => use
  }
  getExclude(app) {
    return this.exclude ? this.exclude(app) : null
  }
  setExclude(exclude) {
    this.exclude = exclude
  }
  getType(app) {
    return this.type ? this.type(app) : null
  }
  setType(type) {
    this.type = lodash_1.isFunction(type) ? type : () => type
  }
  make(app) {
    const output = {
      test: this.test(app),
    }
    if (this.use) {
      output.use = this.use(app).map(item => item.make(app))
    }
    if (this.exclude) {
      output.exclude = this.exclude(app)
    }
    if (this.type) {
      output.type = this.type(app)
    }
    return output
  }
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'getTest',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'setTest',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'getUse',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'setUse',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'getExclude',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'setExclude',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'getType',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'setType',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Rule.prototype,
  'make',
  null,
)
exports.Rule = Rule
//# sourceMappingURL=index.js.map
