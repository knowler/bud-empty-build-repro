import { Framework, Loader } from '@roots/bud-framework';
import type { Item as Contract } from './interface';
import { Base } from '../shared/Base';
export declare class Item extends Base implements Contract {
    protected loader: Contract.LoaderFn;
    protected options: Contract.OptionsFn;
    constructor({ loader, options, }: {
        loader: Loader | Contract.LoaderFn;
        options?: Contract.OptionsFn | Contract.Options;
    });
    getLoader(app: Framework): import("../Loader/interface").Loader;
    setLoader(loader: Loader | Contract.LoaderFn): void;
    setOptions(options: Contract.OptionsFn | Contract.Options): void;
    mergeOptions(options: Contract.Options, app: Framework): void;
    make(app: Framework): Contract.Output;
}
//# sourceMappingURL=index.d.ts.map