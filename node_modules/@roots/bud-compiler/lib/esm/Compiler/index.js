import {__decorate} from 'tslib'
import {Service} from '@roots/bud-framework'
import webpack from 'webpack'
import {isNull} from 'lodash'
import {boundMethod as bind} from 'autobind-decorator'
export default class default_1 extends Service {
  constructor() {
    super(...arguments)
    this.name = '@roots/bud-compiler'
    this.isCompiled = false
    this.statsOptions = {
      all: false,
      version: true,
      hash: true,
      timings: true,
      modules: false,
      moduleAssets: false,
      builtAt: false,
      assets: true,
      chunks: false,
      children: false,
      errors: true,
      env: true,
      entrypoints: true,
      colors: true,
    }
    this.errors = []
  }
  get instance() {
    return this._instance
  }
  set instance(instance) {
    this._instance = instance
  }
  compile(config, cb) {
    if (this.isCompiled) {
      return this.instance
    }
    this.app.hooks.filter('before')
    this.instance = webpack(
      config,
      cb !== null && cb !== void 0 ? cb : null,
    )
    this.isCompiled = true
    return this.instance
  }
  callback(...args) {
    var _a
    /**
     * production mode callback takes two parameters (webpack err and stats)
     * however, the done hook used in development just takes one (stats)
     *
     * here we parse the callback args so that we dont have to
     * duplicate the callback.
     */
    const [err, stats] =
      args.length > 1 ? args : [null, args.pop()]
    this.app.when(!isNull(err), () => {
      this.app.error(err, 'Webpack error (pre-compile)')
      process.exit()
    })
    if (!stats) return
    stats.hasErrors() &&
      console.error(
        (_a =
          stats === null || stats === void 0
            ? void 0
            : stats.errors) === null || _a === void 0
          ? void 0
          : _a.toString(this.statsOptions),
      )
    console.log(
      stats === null || stats === void 0
        ? void 0
        : stats.toString(this.statsOptions),
    )
  }
}
__decorate([bind], default_1.prototype, 'compile', null)
__decorate([bind], default_1.prototype, 'callback', null)
//# sourceMappingURL=index.js.map
