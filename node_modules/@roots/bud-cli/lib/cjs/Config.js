'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
exports.Config = void 0
const tslib_1 = require('tslib')
const cosmiconfig_1 = require('cosmiconfig')
const cosmiconfig_typescript_loader_1 = tslib_1.__importDefault(
  require('@endemolshinegroup/cosmiconfig-typescript-loader'),
)
const autobind_decorator_1 = require('autobind-decorator')
class Config {
  constructor(app, searchPlaces) {
    this.loaders = {
      '.ts': cosmiconfig_typescript_loader_1.default,
    }
    this.app = app
    this.searchPlaces = searchPlaces
  }
  get() {
    var _a
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      const res = yield cosmiconfig_1
        .cosmiconfig(this.app.name, {
          searchPlaces: this.searchPlaces,
          loaders: this.loaders,
        })
        .search()
      return (_a =
        res === null || res === void 0 ? void 0 : res.config) !==
        null && _a !== void 0
        ? _a
        : {}
    })
  }
  apply() {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      const config = yield this.get()
      if (config.extensions) {
        yield Promise.all(
          config.extensions.map(moduleImport => {
            this.app.extensions.add(require(moduleImport))
          }),
        )
      }
      Object.keys(config)
        .filter(key => key !== 'extensions')
        .forEach(key => {
          this.app[key] && this.app[key](config[key])
        })
    })
  }
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Config.prototype,
  'get',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Config.prototype,
  'apply',
  null,
)
exports.Config = Config
//# sourceMappingURL=Config.js.map
