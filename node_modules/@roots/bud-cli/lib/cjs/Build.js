'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
const tslib_1 = require('tslib')
const Command_1 = tslib_1.__importDefault(require('./Command'))
const Config_1 = require('./Config')
const flags = tslib_1.__importStar(require('./flags/index'))
const autobind_decorator_1 = require('autobind-decorator')
const lodash_1 = require('lodash')
class Build extends Command_1.default {
  run() {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      this.app.mode = this.mode
      yield this.doStatics()
      yield this.builder([
        `${this.app.name}.ts`,
        `${this.app.name}.js`,
        `${this.app.name}.config.ts`,
        `${this.app.name}.config.js`,
      ])
      yield this.builder([
        `${this.app.name}.${this.app.mode}.ts`,
        `${this.app.name}.${this.app.mode}.js`,
        `${this.app.name}.${this.app.mode}.config.ts`,
        `${this.app.name}.${this.app.mode}.config.js`,
      ])
      const flags = this.parse(Build).flags
      Object.entries(flags).forEach(([k, v]) => {
        this.app.store.set(k, v)
      })
      this.app.run()
    })
  }
  doStatics() {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      yield new Config_1.Config(this.app, [
        `${this.app.name}.json`,
        `${this.app.name}.yaml`,
        `${this.app.name}.yml`,
        `${this.app.name}.config.json`,
        `${this.app.name}.config.yaml`,
        `${this.app.name}.config.yml`,
      ]).apply()
      yield new Config_1.Config(this.app, [
        `${this.app.name}.${this.app.mode}.json`,
        `${this.app.name}.${this.app.mode}.yaml`,
        `${this.app.name}.${this.app.mode}.yml`,
        `${this.app.name}.${this.app.mode}.config.json`,
        `${this.app.name}.${this.app.mode}.config.yaml`,
        `${this.app.name}.${this.app.mode}.config.yml`,
      ]).apply()
      yield new Config_1.Config(this.app, [
        `${this.app.name}.${this.app.mode}.json`,
        `${this.app.name}.${this.app.mode}.yaml`,
        `${this.app.name}.${this.app.mode}.yml`,
        `${this.app.name}.${this.app.mode}.config.json`,
        `${this.app.name}.${this.app.mode}.config.yaml`,
        `${this.app.name}.${this.app.mode}.config.yml`,
      ]).apply()
    })
  }
  builder(configs) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      const builder = yield new Config_1.Config(
        this.app,
        configs,
      ).get()
      this.app = !lodash_1.isFunction(builder)
        ? this.app
        : builder(this.app)
    })
  }
}
Build.flags = {
  help: flags.help({char: 'h'}),
  cache: flags.boolean(),
  ci: flags.boolean(),
  debug: flags.boolean(),
  log: flags.boolean(),
  hash: flags.boolean(),
  install: flags.boolean(),
  manifest: flags.boolean(),
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Build.prototype,
  'doStatics',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  Build.prototype,
  'builder',
  null,
)
exports.default = Build
//# sourceMappingURL=Build.js.map
