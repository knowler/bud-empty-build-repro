'use strict'
Object.defineProperty(exports, '__esModule', {value: true})
const tslib_1 = require('tslib')
const bud_framework_1 = require('@roots/bud-framework')
const pretty_format_1 = tslib_1.__importDefault(
  require('pretty-format'),
)
const lodash_1 = tslib_1.__importDefault(require('lodash'))
const autobind_decorator_1 = require('autobind-decorator')
class default_1 extends bud_framework_1.Service {
  constructor() {
    super(...arguments)
    this.name = '@roots/bud-hooks'
  }
  get(path) {
    return lodash_1.default.get(this.repository, path)
  }
  set(key, value) {
    lodash_1.default.set(this.repository, key, value)
    return this
  }
  on(id, callback) {
    const [publisher, name] = lodash_1.default.isArray(id)
      ? id
      : ['anonymous', id]
    const current = this.get(name)
    if (!lodash_1.default.isArray(current)) {
      this.set(name, [callback])
    } else {
      this.set(name, [...current, callback])
    }
    this.logger.scope(name, publisher).success({
      message: `${name} updated`,
    })
    return this.app
  }
  filter(id) {
    const [subscriber, name] = lodash_1.default.isArray(id)
      ? id
      : ['anonymous', id]
    !this.has(name) && this.set(name, [lodash_1.default.noop])
    const result = this.get(name).reduce((v, cb) => {
      return lodash_1.default.isFunction(cb) ? cb(v) : cb
    }, null)
    this.logger.scope(name, subscriber).success({
      message: `${name} retrieved`,
      suffix: pretty_format_1.default(result, {
        highlight: true,
      }),
    })
    return result
  }
  link(target, links) {
    this.on(target, () =>
      links.reduce(
        (a, link) =>
          Object.assign(Object.assign({}, a), {
            [link]: (() => this.filter(`${target}/${link}`))(),
          }),
        {},
      ),
    )
    return this.app
  }
}
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  default_1.prototype,
  'get',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  default_1.prototype,
  'set',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  default_1.prototype,
  'on',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  default_1.prototype,
  'filter',
  null,
)
tslib_1.__decorate(
  [autobind_decorator_1.boundMethod],
  default_1.prototype,
  'link',
  null,
)
exports.default = default_1
//# sourceMappingURL=index.js.map
